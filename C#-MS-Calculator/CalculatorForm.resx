<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADrGAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABilSURBVHja7Z19kFXlfcdPTTCy9e0PHYMgVRNtfQN1uefeRQVM2Puyu/dld6GBAPKS
        RP9IxgiN1ujENOrEBumMmQqaia+tWsVpXhQUTaNtkzRNpzEzSZsJpiZsLaQI9g8jtE7Up8/3uecusK6y
        wLnn7X7OzHcW5K7nPr/z+32e3/N7fuccz+Pg4OBI+uH31jx/ft3LF61KCCVQ1jf93uZPjiM8CtagPTJq
        eZ+BCxVn4KOtgY+3fz/ZaorVVKtpCMWgqYEPnlwoNo7P9zaO3uevNauG5xcHLRAGCeiJHLlizevurY4G
        /KyyA8Cx1phn2b8vsLrJ6gGrZ61esHrRasTqZYRi0Ejggz8OfPKBwEeHnc8WG8f2lAeak5eFwSwLBb9E
        dvDO9L486F1U/ePAUEqhapOtAWfav19r9VRg6L1WBqEUaG/gs5utrreZQLcFwOTWxDa70nCZbccf3aUh
        b16x4lKlHs38ZZfaD1pttNpu9TbOhDKg3wQ+PWQntxP9oI41t79ms94OBUGhVPUKRSutlYqNriDF12z/
        WxwGZVSvWz3T9PXa7ysL0DI310nZwLx587xZlQVK873t9u/WEBcHaycCH3WK5OsPWwDkjLfQ1QUusdnw
        jGIx40W+ctX7wyuNHXBDWyVaE11l9RIOgTpUv2rGQK1LRcIzhoZdPSybhb5S3QFAax+/VNP2yZ1BSoQj
        oE7WHqsNNiOeqqw4VxmyEGhkrcrfsMHfCIK/ri29J7jwCB2gJ63OLhTrLlYys12oWT9XaTVG1GdY/T0X
        G6Fxpdi4oOCy5cH0Lwd6Fi70vD1nNDuimjP/81xkhN5T/+AyATth/tHST3rd1WqKU/+PVD3frmv8smuZ
        JO1HaMLLAVcn8wq9KV0KqKARdD6p2r+ei4rQIWl9vlyb3LqvIHUdfgLA5d++XgC4Mqh0clEROrTdgas8
        Y1yzXM/AQHoAcHmxEvT017vZ50fosPWSGuXUOnxhfmE6gn+2S1m05efae/+Ki4jQEenBfKnaZZcDnt+X
        gv6AOeptbq79F9Dei9AR6zXdXlyYX/UubixI/v38bvYvNk6wX3oLFw+hUPS0XQqc4AqCSe4NcA/zaHb8
        DTH7IxTqXYSDrpmuMpzsfn+/5LYuNnLREApVG+3k6rYFE/sMv2Df/yKrHVwwhEKVHpBzobufppLAvgA9
        wHOWq/7Xr+NJPgiFLsXUtT3zh7xcJYHtwcHsf2zwVB8uGELha5PfjLHEAkA3/IxwoRBqi7blS7UPJw4A
        rQd9BHv/PL0XofZIsTXsbhIqJWg7cFZf1evpdev/LybPaDWTLyJ0GJLvJA8CN2k7sJCkl424x32Vakfn
        mw/3TIShCsWqu4i5/oWmu77MXDy4wlw0tBKhg0q+Ip+R78iHnC8lBwD358tDk/JJemxYkP7rmf7PJiHw
        c30LzPlL15jp191nTlr7vDluw7+brnt/bSbf958IHVTyleM2/JvznenX3et8ST6VEBA8ky81jk9UHcC9
        sLPo3tX3Qqypvv15wZJrzCm3bjbHPLDdvO+x181RG/c6vW/jHoQmrFG/sT4kXzrl1qccCPb3tZik15Cd
        lEQA6CWJv4wr+H1L6DOv/qrpuufX+y6kvXgIHbECIEy2mYF8TNlAjBDQuwinJAsAzSXA1Hi2ABX8w2b6
        tfeYSQ/tHqU2QmFLviUf09LSjw8CI0GsJQ4Ael3yy3FQUVTWhWHWR1FkA5Me3u18LqYM4OUg1gCAijJa
        lyk1Y+ZHUWYCWmqev2R1HIVBANCS1mIqzhD8KA4IqNjcrAcAgMgB0Jr9XbWf1B/FsBSQ78kHI84CAIBT
        seaKMTgjilPTr7036BoEABECoNnhp0YN0n8U5zLgpK881+wYjG5HAACIuGrVVIcfAEBxAkAdg931pVFm
        AQBAxla/9mjTD86IYqoDyAfliwAgYgDopg31bQMAFCcA5IPyRQAAABAAAAAAAAEAAAAAEAAAAAAg0VVs
        q997tKmjOC8AAACdoVYAnPi3e8zUbzelP7cChPMCAACQ4eBXAKx+4Q3zzG/eNC++9pbTFvvnP/nJG+a0
        J/a0JRgzeV4AAADSFvwXbtlrvvPfb5q33jbvOPSf9G/6TJjBmNnzAgAAkKbgn2ZnQjn8wY5n7eyoWTOM
        YMz0eQEAAEhTwW+1TXnHmwnHHvrMNTZlPupRzgsAAEAmgl9FL62BJ3pojdwqlHFeAAAAMlD4U/FrosdW
        +9kjTcczf14AAADSBICtMQViZs8LAABAmpYAWw4hJX46xFQ8s+cFAAAgi0XAN2MqxqXuvAAAAKRtGTCR
        wljY23GZPS8AAABpg8DMLXudw7/59vjbYfq3mW1oyMnkeQEAAEgjBE61s93VNuXVGlnFr61Ba+wamzKH
        NQN3xHkBAADI1M1Aj8Z0U05azwsAAAC3A3M7MAAAAIgHggAAAIAAAAAAAAgAAAAAgAAAAODFIIgXgwAA
        Xg2GeDUYAODloIiXgwKAsF4Pfi+OiGIVrwePCQCFYtWcv3SNOeaB7dQBUCzrf/ne+UvWOF8EAFFnAFa5
        vgXmlFufYhmAYkn/T7l1s/GtD0bp8wBgbBZgCTzZ7QYAARRd8Hfd+2vre6ujnv0BwHg68+o7zKSHdrMU
        QJGk/vI1+Vwcvg4AxtkR8PuGzfRr73EXhuUAal/w73U+Nv26+5zPRVj5BwATgcCZV3/VdN3zq+ZygGwA
        hTjrt9J++Vhz3V8jA0gOAOqjF+SCJde44ozbHQjWa0e1gIDQBDXqN9aH5EvyKe067e9rACBRANhXGNTu
        gC6W9mjVqKFuLdFbfdsIHUxq75XPyHfkQyo0a9aPoeAHAI4EBGrQUJeWWjXVr62bNhA6mOQr8hnX4Wf9
        KCGBDwAOe2lQROgwFG+qDwAQQgAAIQQAEEIAACEAAAAQAgAAACEAAAAQAgAAACEAAAAQAgAAACEAAAAQ
        AgAAACEAAAAQAgAAACEAAAAQAgAAACEAAAAQAgAAACEAAAAQAgAAACEAAAAQAgAAACEAkDoAFOvGz4g0
        liQ7qF9qfddGytUcCwBIKQBaATN7oG7mDNbNvAVSzcxbmFLpuy9ojkVjGgVCQoI+Z4NGmts/YEqNihkY
        KpnqcDGV0nfXGDSW1rh8AJAOACgoevrrprKqZpbfPGCu+fqAufHxfvNnT/abmzenWxqDxqIxLb+5aior
        a26scYJAwXFZX9WsumKOuevGc8zzd0wxW+87wex4uMvs/JvJqZS+u8agsWy44Ryz0o5NY9RYAUDCAVBe
        UTOfvnPA3LKlz9z+vT6z7gdW38+YftAcm8b4GTtWgSCOWV8/ly+ba55cO928+tgHjHnSM2az1aaMSGOx
        Y9LYNtkxCgT7jx0AJAUAmvX76mbx56tulmwFioIky2qNU2NeZMcuG0RRI1DGcamdEf98zUyz3c6WowHz
        ZEYVjE+ZwW12zMoGYsy6AMBYyfGXf6lqbvtuZwT+eCDQ2LUscBBo88yv4F9/w7lmzzfen+3AHwcEe+2Y
        tdRxEAAAyQCAZv5ODf6xEFAm0G57a+bvuODfDwIauzIBMoCYAaA0TOvfVtrfqcG/PwRki7K1STtSVBXB
        tA7e8UhXZwb/fhDQcmDFsrlxFAYBwGjq3183n1k/QPCPgYCKoLJN2Km/0t5Nt0/v7ODfDwIqfsawFAAA
        o7P/qpqrhAOAAwEgm4SdBWim01afq/YDAGcD2UIZUcRZAABoAUD7/AT9+FJRNGwAqPjV8YE/RhtuOBcA
        xAEAdcOpIaa1Jx6H1n6v8p6KLQuwNpFtZKOw0n91xakxprU3jpp9As/dcaqzjQ8AIgRAsdkSq664ONJ/
        BfdffL9q1v/zx83d/3LFuNK/6TNxgEA2kW1kozD6ApRJqDVW3XGk/wcuA35hbSLbRNgXAABkbPXFx1H9
        V0AruH/08uNm954R89r/7RpX+jd9Rp+NGgKt3QDdP+CHAoCG648fbfoh+EcBIJv0W9v40S0DAEATADXX
        Hx81ADSrK7Aneuiz+p2oASDbhAkA3SSjPnkAcCAAZBPZBgBEDYCF0QOgNftrdp/ooc9GnQWMAmAhAAAA
        ACBUAGh9rxR/ooc+q98BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAgA79bZ95V/LJm7frTs
        kAGg39HvRtUxCAAAAABoQ4efAvmvf/JZ8/obr04YAPqsfke/G1XHIAAAAACgTR1+Cui3335rwgDQZ/U7
        UXYMAgAAAADa3OEX9hFmxyAAAAAAoM0dfmEfYXYMAgAAAADaXN0P+whztwAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAydoG3MY2IAAAADQC0QgEAAAArcAAAAAAAG4GAgAAAABwOzAAAAAA
        gAeCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABL4arBtvBoMAAAAXg7Ky0EBAADg9eApfT14
        2wHwRJsFALIDgLx16jmDdXPj49EDYCIdg+3q8DsUAMg2slE+DQDY/AFjnp1izHemtUf6f+scACAjALCa
        PVA313x9wKz7QfQAOFjHYLs6/CYMAGuTz1rbyEbhZFxtBMB3zzBm5GvGvP6iMf/7cnuk//fI3fZcpwOA
        rABAqe3ym6uxBVnSJduEkf63FQCalRX8UR3b7g43EwAA8QKgsrJmbtnSF8syIKmSLW55us/ZJtEA0Lpc
        qblm56gOnevZD4ZXEwAA8QFA6umvm0/fOQAAxgBANunpCxO2bQKA1udK0aM6dC6dEwBkAwCa4cp2potj
        NyCpwS9blFeEN/sDAACQWAC0tOj6qrntu529FNDYZQPZInzQAgAAkGAAKN294kudC4FW8KvwF2bqDwAA
        QCoAoL1uOf6iz1dHlwOdAILWODVmzfwu+IsAAAB0GgD2k9a/KoJpd6C1J94KlMwo6H3QGDVWVfzbW2sB
        AAAgJQBQ8Uu7AwoKpcRqFlJXnGZJ9cenWRqDxqImH41NY9Ss7xfr6QQA24AAoJ0gkNQNp5ZY9cU7LUyp
        3PdvjkVjao0vGlu2sxHo7ggbge6iEahTADC2RuBnRPliHDBtZyvw6c0OvXa3Aiv4/+4PaAXuSACgFNwM
        9ME23gz0QW4GAgCI24EBAABAPBAEAAAABAAAAABAAAAAAAAEAAAAAEAAAAAAAAQAAAAAQAAAAAAABAAA
        AAAAADQCAQAAAAB4LwAASBEA/IwqOzcD8V4AANAG5YJAmdPbMMX5g6by0UHTl3JpDBqLxuQHY0z/7cC8
        FwAAhBz4l9qLsWzOsFnXvch867xl5odnLzc//dAK8/MzV6ZaGoPGojGt617sxqix5tIIAB4IAgDCTvX1
        c8ncYfPwjCVmqw2YV6Z/wuw+7RNml/35Ska0KxjTTvtTY3zkgqVmqQVBvo1LAx4JBgASDQA/mPW/6H/M
        zZKtgN+ZcbWA8LMPrTQ35T/mbOADAADQSQBoBf/tsxaZbaevcgGxs8OkMY/Ysa+btbgtEAAAACDRGYBm
        fgX/Kx0Y/PtnA7KBMgEyAADQEQBQ8WupXfP/LEj7d3a4ZIOf2uWAbJIDAAAg6wBQuvvIjKUE/xgIPDJj
        ibMNAAAAmQWAZjhtg7Wq/QT/vqWAbKKdgRzbgGwDZhUAKnRpL5zgH18qiuZS0QjEewEAwGEEv7rh1BDT
        2hNH+ySbfPO8paMdg7wXgPcCZA4AaolVVxzr//HrALJNr7VR4gHAewEAwOEAQH3xqnizBBi/DiDbyEap
        AAC3AwOAQwWAbo75OQXAdwWAbNOXJgDwQBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0GYAnLbK7JwWkXQuAAAAAEACAKBgPPNKs+vi1WZX/nPRyJ5L5wwTBAAAAACAwwj+Xd2rzZ67
        nja/e3G7ees3/9PUjjYp+P/rXHvueqoJgpAgAAAAAAA4VNlZWMEf17Fnw1PNTAAAAAAAEDEANPvbGViz
        cVzH77ZuDy0LAAAAAAAciqatcutxpeRxHTq3voMrDAIAAAAAAAAAAAAAIEoA7IgRADsAAAAAAAAAAAAA
        AMASAAAAAADQSQAgAwAAAIBtQLYBAQAA6NhGoE/RCAQAAEBsrcB2BlYgajaOrBXYnkvnpBUYAACATr0Z
        6IxPcTMQAAAA3A4MAAAAAOCBIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AHQmAHg9+MFeD74i1NeDDwyVzPaHuwDAGADIJv3WNgAgYgAU5w+aH5693Owi4N8h2eSfrG1654cFgLop
        NSpm630nAIAxAPiFtYlsIxsBgAgBMKe3Yb513jKz+zQCfqxkk29a28hGfkj2nts/YJ6/Y4oxmwn8UVlb
        PHfHqWaOtY1fAgCRAaDllOu6FxPw76LbZy02uRDtnbMp7oYbziHox2j9Dec62+QBQLQAkHMvmzNstlII
        fMf6XzZZam0TNgBWXjHHvPrYB1gGBOn/bmuLlVfMBQBxAEC61Br+kQuWUAcYs/5/eMYSZ5uwM67L+qpm
        09rpACAAwBPWFrJJhOk/ABibBWim024AEGgGv6r/S+aGO/vvnwWsWDaX3YCg+i9bRDz7A4DxdFP+Y2bb
        6as6eimgscsGskW77f3lNReaPd94f2dCwI5ZY//ympkmDl9PMgCmWo1EbRDfLQXqZu2sRS4AdnXozD9i
        x75u1mKX+vvttrdNe1X86jgI2LHutWPecOM5zgZ+PAAYCWItQQAo1qUp9kv9Mg4q+kE9QLPfTz+8wgXE
        Kx0y67fSfo293cG/f1+AAuA2OwuOLgc2ZTvwpR12rMp+3Lq/WI8rA3jRakoSM4CTrV6IySijjv9xu/5V
        EUyV8NaeeAsIWdCuYEw7g2r/I3asqoPsb4Mo7b3croOfXDu9uTsQ7I2PAiHtCnoeNDaNUbsgUdt5HP2r
        Pf9JfuIAUKwfb38+m4/XOK74pZlQW4S322XBN89b6rriNEuqPz7NUrFTY1GTj8amwNdYc3Ha255fM6KC
        Y4NdFqgxRt1xygzUJ59G6btrDBqLljoam8YYQ8FvPD1jg//4hC0BGtLR9ks9kAADjYIgF3QMqiVWffF9
        KZfGoLFoTK3xJcHWfgACSR2Dao3VvQO6SSaNUm+/xqAOv9a4/ITY2uo+v7c2KV+sJQcAhdKg55dqygRu
        yifHUKPOmUXlEyo/qBHo5ph0K7F2/oJfHPQKlYEkAaDRqgMMW+3NJ9hBEUqxFFsLXayVq16ijiYAamfF
        sRWIUIfov6zOSdT6f8xOwLFWm7lQCLVFT1kdl0gAaF3SUx4QBK6zepuLhVCoUkxd29M77OXKAwnMACwA
        mmuT+kX25w4uGEKharvVhYoxP2nr/wOWAeXGZPtzIxcMoVD1mNXkRKb/raN7ftUrlF0tYNDqt1w0hEKR
        YmnQt7HV89FqcgGQK9Zay4AT7M+nuXAIhVP8s7F1gl+se4XempfoY2Z92JvdW2v1BLzGxUPoiKQYGipU
        Gt7F8wa8xB+z+hrKAKQu+8Uf5AIidER6sFCsdan1N5f02b91XPqRj9sMQN2BtYvtAF7iIiJ0WPqPQsnt
        qnnn9ze81By5vj4Fv3dR45NaCnzKag8XE6FDkmLmquq0RS6jviQts/++LcGaZ1MXr6e3Ntn++U4uKEKH
        pDvt7D+50Oyw9VJ55MrDnu+eFVA91Q7iCS4qQhPSt23gn6p1f/4jVS+1x7x58zzPGJcN+EV3o9DzXFyE
        3lPP54v1s1RDO9a73utZuNBL9eFrS3B+tXWz0AVWz3GREXqX4Lcxomdr9Nh4KZSqXiYOpTIajBoZbDbw
        YaU4XGyEDrjRRzFxVr7c8Apq+Ck1vEwdhXITAs3nB9ZUE/hLq9e5+Ihqf319oVxXTNjgH/AS9bivsJcD
        pxjj+SVHuWOCLUL6BFCnSr5/pV9udKna/zXPZCftf6/C4KzKAvcugbXeZcoI1Cz0AG3DqMNu7nnIqvvC
        FX/qsuJCb8PrrmY8+A/IBsq6r7nR3CEoubbhoeBpQoAAZVVa8j6j+2QKrlW+5tL9zKb8B719uDTkzSuW
        mnWBinuwqJ53Xgvufd7Ok4VQRgp8OwKfHrLBfqLviuJ1r+fy+dbvh7yOP/K9VS83r9J6sKjXfPBBbab9
        +TmrTVbb8jxtGKVH8tWXg2f46RF5FxWK1qfLTf+eXWneMMcxFgTlQUvE4VEQ9Mwf0vsGjvW1PdK8vfgL
        VvcHadSP8833pI0ExkYoao0EPvjjwCfvD3xUj+4+x/rtcYXKYOvNWe5hHoXeGoE+oRpBpeblKqMNRE65
        Xi0VBicFr0bSuwj1kkS9KXUaQjFoatMHayfp1Xi5UmOS33o2ZiDtfPlFgv6Ij9l9de+SvpqeOXiAgRGK
        XzU3w+u+l4KejF2uErAcHBzJP/4fOi0ZYwTy8MIAAAAASUVORK5CYII=
</value>
  </data>
</root>